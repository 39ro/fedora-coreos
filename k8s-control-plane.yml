variant: fcos
version: 1.6.0
passwd:
  users:
    - name: core
      ssh_authorized_keys:
        - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDixgmi6yxyYmkok37WUtOr6x1R2kGcsUsST5ewC7Xjh nousername"
      groups:
        - wheel
storage:
  files:
    - path: /etc/hostname
      mode: 0644
      contents:
        inline: k8s-node
    - path: /etc/yum.repos.d/kubernetes.repo
      mode: 0644
      contents:
        inline: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://pkgs.k8s.io/core:/stable:/v1.34/rpm/
          enabled=1
          gpgcheck=1
          gpgkey=https://pkgs.k8s.io/core:/stable:/v1.34/rpm/repodata/repomd.xml.key
    - path: /etc/yum.repos.d/cri-o.repo
      mode: 0644
      contents:
        inline: |
          [cri-o]
          name=CRI-O
          baseurl=https://download.opensuse.org/repositories/isv:/cri-o:/stable:/v1.34/rpm/
          enabled=1
          gpgcheck=1
          gpgkey=https://download.opensuse.org/repositories/isv:/cri-o:/stable:/v1.34/rpm/repodata/repomd.xml.key
    - path: /etc/modules-load.d/k8s.conf
      mode: 0644
      contents:
        inline: |
          overlay
          br_netfilter
    - path: /etc/sysctl.d/k8s.conf
      mode: 0644
      contents:
        inline: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
    - path: /etc/kubernetes/kubeadm-config.yaml
      mode: 0644
      contents:
        inline: |
          apiVersion: kubelet.config.k8s.io/v1beta1
          kind: KubeletConfiguration
          volumePluginDir: "/var/lib/kubelet/volumeplugins"
          cgroupDriver: "systemd"
          containerRuntimeEndpoint: "unix:///var/run/crio/crio.sock"
          ---
          apiVersion: kubeadm.k8s.io/v1beta4
          kind: InitConfiguration
          nodeRegistration:
            criSocket: "unix:///var/run/crio/crio.sock"
          ---
          apiVersion: kubeadm.k8s.io/v1beta4
          kind: ClusterConfiguration
          networking:
            podSubnet: "10.244.0.0/16"
          kubernetesVersion: 1.34.0
          controllerManager:
            extraArgs:
              - name: flex-volume-plugin-dir
                value: "/var/lib/kubelet/volumeplugins"
    - path: /usr/local/bin/kubeadm-post-init.sh
      mode: 0755
      contents:
        inline: |
          #!/bin/sh
          set -e
          echo "### Finished kubeadm init, setting up kubeconfig ###"
          
          # Set up kubeconfig for the core user on the node
          mkdir -p /home/core/.kube
          cp /etc/kubernetes/admin.conf /home/core/.kube/config
          chown -R core:core /home/core/.kube
          
          # Untaint the control-plane node to allow pods to be scheduled on it
          KUBECONFIG=/etc/kubernetes/admin.conf /usr/bin/kubectl taint nodes --all node-role.kubernetes.io/control-plane-
          
          # Copy admin.conf to the core user's home for easy scp access
          cp /etc/kubernetes/admin.conf /home/core/admin.conf
          chown core:core /home/core/admin.conf
systemd:
  units:
    - name: install-k8s.service
      enabled: true
      contents: |
        [Unit]
        Description=Install Kubernetes packages
        Requires=rpm-ostreed.service
        After=rpm-ostreed.service network-online.target
        Wants=network-online.target
        ConditionPathExists=!/var/lib/%N.stamp

        [Service]
        Type=oneshot
        TimeoutStartSec=0
        ExecStart=/usr/bin/rpm-ostree install cri-o kubelet kubeadm kubectl
        ExecStartPost=/usr/bin/touch /var/lib/%N.stamp
        
        [Install]
        WantedBy=multi-user.target
    - name: crio.service
      enabled: true
    - name: kubelet.service
      enabled: true
    - name: qemu-guest-agent.service
      enabled: true
    - name: kubeadm-init.service
      enabled: true
      contents: |
        [Unit]
        Description=Initialize Kubernetes cluster
        Requires=crio.service
        Wants=kubelet.service
        After=crio.service kubelet.service
        ConditionPathExists=!/etc/kubernetes/admin.conf

        [Service]
        Type=oneshot
        ExecStart=/usr/bin/kubeadm init --config /etc/kubernetes/kubeadm-config.yaml --upload-certs
        ExecStartPost=/usr/local/bin/kubeadm-post-init.sh

        [Install]
        WantedBy=multi-user.target